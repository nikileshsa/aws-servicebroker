AWSTemplateFormatVersion: 2010-09-09
Description: >-
  Cloudformation template for Dragonfly AWS Managed Service Kafka service
Metadata:
  AWS::ServiceBroker::Specification:
    Version: 1.0
    Tags:
      - AWS
      - MSK
      - msk
      - awsmsk
    Name: awsmsk
    DisplayName: awsmsk
    LongDescription: >-
      Amazon Managed Streaming for Apache Kafka (Amazon MSK) is a fully managed service that makes
      it easy for you to build and run applications that use Apache Kafka to process streaming data.
    DocumentationUrl: https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/GettingStarted.html
    ProviderDisplayName: Amazon Web Services
    UpdatableParameters: [VolumeSize,CloudWatchLogRetentionPeriod,NumberOfBrokerNodes,JmxExporter,NodeExporter]
    ServicePlans:
      production:
        DisplayName: Production
        Description: Configuration designed for production deployments
        LongDescription: Creates an Amazon msk optimised for
          production use
        Cost: https://aws.amazon.com/elasticache/pricing/
        ParameterValues: {}
      integration:
        DisplayName: Integration
        Description: Plan used for integration
        LongDescription: Creates an Amazon MSK for integration workflows
        Cost: https://aws.amazon.com/elasticache/pricing/
        ParameterValues:
          NumberOfBrokerNodes: 2
Parameters:
  MskSecretName:
    Type: String
    Description: AWS MSK Secret Name
    Default: MSKSecret
  ClientBrokerEncryption:
    Type: String
    Description: Indicates the encryption setting for data in transit between clients and brokers
    AllowedValues: [TLS, TLS_PLAINTEXT,PLAINTEXT]
    Default: TLS
  ClientAuthUsingSaslScram:
    Description: SASL/SCRAM authentication is enabled or not
    Type: String
    AllowedValues: [true, false]
    Default: true
  S3BucketName:
    Description: S3 bucket where the lambda functions are stored
    Type: String
    Default: dflyawsservicebroker-tesseractinternal
  EksWorkerSecurityGroupID:
    Description: >-
       Security Group id that is associated with the Client
    Type: AWS::EC2::SecurityGroup::Id
  EKSClusterName:
    Description: Tags to add to the AWS MSK cluster. Currently the service instance will provide values for the key clustername.
    Type: CommaDelimitedList
  KafkaVersion:
    Description: 'Kafka version'
    Type: String
    Default: 2.2.1
    AllowedValues:
      - 2.2.1
      - 2.3.1
  CloudWatchLogRetentionPeriod:
    Description: 'The number of days to retain the log events in the specified log group. Possible values are: 1, 3, 5, 7, 14, 30, 60, 90, 120, 150, 180, 365, 400, 545, 731, 1827, and 3653.'
    Type: Number
    Default: 30
    AllowedValues: [1, 3, 5, 7, 14, 30, 60, 90, 120, 150, 180, 365, 400, 545, 731, 1827,3653]
  ConfigurationArn:
    Description: AWS MSK kafka configuration arn
    Type: 'String'
    Default: 'AWS::NoValue'
  Subnets:
    Description: >-
      List of subnets that need to be used for this cluster creation. It must be equal to the number of broker nodes for cluster creation
    Type: 'List<AWS::EC2::Subnet::Id>'
  ClusterName:
    Description: >-
        Logical cluster name for the MSK to be created
    Type: 'String'
  VpcId:
    Description: >-
       VPC ID of where the cluster will be deployed
    Type: 'String'
  InstanceType:
    Description: The instance type the Kafka will launch under.
    Type: String
    Default: kafka.m5.large
    AllowedValues:
      - kafka.t3.small
      - kafka.m5.large
      - kafka.m5.xlarge
      - kafka.m5.2xlarge
      - kafka.m5.2xlarge
      - kafka.m5.12xlarge
      - kafka.m5.24xlarge
  VolumeSize:
    Description: The size in GiB of the EBS volume for the data drive on each broker node.
    Type: Number
    Default: 100
    MinValue: 1
  NumberOfBrokerNodes:
    Description: The number of broker nodes you want in the Amazon MSK cluster. You can submit an update to increase the number of broker nodes in a cluster.
    Type: Number
    Default: 3
  ClientBroker:
    Type: String
    Description: Indicates the encryption setting for data in transit between clients and brokers
    AllowedValues: [TLS, TLS_PLAINTEXT,PLAINTEXT]
    Default: TLS
  JmxExporter:
    Description: Indicates whether you want to enable or disable JmxExporter
    Type: String
    Default: true
    AllowedValues: [true, false]
  NodeExporter:
    Description: Indicates whether you want to enable or disable the Node Exporter.
    Type: String
    Default: true
    AllowedValues: [true, false]
  ClientBroker:
    Type: String
    Description: Indicates the encryption setting for data in transit between clients and brokers
    AllowedValues: [TLS, TLS_PLAINTEXT,PLAINTEXT]
    Default: TLS
  InCluster:
    Description: >-
      When set to true, it indicates that data communication among the broker nodes
      of the cluster is encrypted. When set to false, the communication happens in plaintext.
    Type: String
    Default: true
    AllowedValues: [true, false]
  UseMSKDefaultConf:
    Type: String
    AllowedValues: [ true, false ]
    Default: true
Conditions:
  UseMSKDefaultConfig: !Equals [ !Ref UseMSKDefaultConf, true ]
  EnableClientAuthConfig: !Equals [ !Ref ClientAuthUsingSaslScram, true ]
Resources:
  MSKCMKEncryptionKey:
    Type: AWS::KMS::Key
    Condition: EnableClientAuthConfig
    Properties:
      Description: Symmetric Key for AWSMSK Client authentication
      KeyPolicy:
        Version: '2012-10-17'
        Id: key-default-1
        Statement:
        - Sid: Enable IAM User Permissions for AWSMSK Customer Master Key
          Effect: Allow
          Principal:
            AWS: !Sub 'arn:aws:iam::${AWS::AccountId}:root'
          Action: kms:*
          Resource: '*'
        - Sid: Allow administration of for for AWSMSK Customer Master Key
          Effect: Allow
          Principal:
            AWS: !Sub 'arn:aws:iam::${AWS::AccountId}:role/admin'
          Action:
          - kms:Create*
          - kms:Describe*
          - kms:Enable*
          - kms:List*
          - kms:Put*
          - kms:Update*
          - kms:Revoke*
          - kms:Disable*
          - kms:Get*
          - kms:Delete*
          - kms:ScheduleKeyDeletion
          - kms:CancelKeyDeletion
          Resource: '*'
        - Sid: Allow use of the key
          Effect: Allow
          Principal:
            AWS: !Sub 'arn:aws:iam::${AWS::AccountId}:role/admin'
          Action:
          - kms:DescribeKey
          - kms:Encrypt
          - kms:Decrypt
          - kms:ReEncrypt*
          - kms:GenerateDataKey
          - kms:GenerateDataKeyWithoutPlaintext
          Resource: '*'
      Tags:
        - Key: ClusterName
          Value: !Select [ 0, !Ref EKSClusterName ]
        - Key: MSKSecretName
          Value: !Ref MskSecretName
  MSKCMKEncryptionKeyAlias:
    Type: AWS::KMS::Alias
    Condition: EnableClientAuthConfig
    Properties:
      AliasName: !Sub "alias/${AWS::StackName}-KMSKey"
      TargetKeyId: !Ref MSKCMKEncryptionKey
  AWSMSKSecret:
    Type: AWS::SecretsManager::Secret
    Condition: EnableClientAuthConfig
    Properties:
      Name: !Ref MskSecretName
      KmsKeyId: !Ref MSKCMKEncryptionKey
      Description: 'AWS MSK Kafka user secret'
      GenerateSecretString:
        SecretStringTemplate: '{"username": "admin"}'
        GenerateStringKey: 'password'
        PasswordLength: 16
        ExcludeCharacters: '"@/\'
      Tags:
        -
          Key: ClusterName
          Value: !Select [ 0, !Ref EKSClusterName ]
  MSKSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Enable access to the MSK cluster
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 2181
          ToPort: 2181
          SourceSecurityGroupId: !Ref EksWorkerSecurityGroupID
        - IpProtocol: tcp
          FromPort: 9094
          ToPort: 9094
          SourceSecurityGroupId: !Ref EksWorkerSecurityGroupID
        - IpProtocol: tcp
          FromPort: 9092
          ToPort: 9092
          SourceSecurityGroupId: !Ref EksWorkerSecurityGroupID
        - IpProtocol: tcp
          FromPort: 9096
          ToPort: 9096
          SourceSecurityGroupId: !Ref EksWorkerSecurityGroupID
  MSKLogGroup:
    Type: 'AWS::Logs::LogGroup'
    Properties:
      LogGroupName: !Join
      - ''
      - - '/aws/vendedlogs/'
        - !Ref ClusterName
      RetentionInDays: !Ref CloudWatchLogRetentionPeriod
  MSKCluster:
    Type: 'AWS::MSK::Cluster'
    Properties:
      ConfigurationInfo:
        !If 
        - UseMSKDefaultConfig
        - !Ref 'AWS::NoValue'
        - 
          Arn: !Ref ConfigurationArn
          Revision: 1 
      BrokerNodeGroupInfo:
        ClientSubnets: !Ref Subnets
        InstanceType: !Ref InstanceType
        SecurityGroups:
          - !GetAtt
            - MSKSecurityGroup
            - GroupId
        StorageInfo:
          EBSStorageInfo:
            VolumeSize: !Ref VolumeSize
      ClusterName: !Ref ClusterName
      EncryptionInfo:
        EncryptionInTransit:
          ClientBroker: !Ref ClientBrokerEncryption
          InCluster: !Ref InCluster
      EnhancedMonitoring: PER_TOPIC_PER_BROKER
      KafkaVersion: !Ref KafkaVersion
      NumberOfBrokerNodes: !Ref NumberOfBrokerNodes
      OpenMonitoring:
        Prometheus:
          JmxExporter:
            EnabledInBroker: !Ref JmxExporter
          NodeExporter:
            EnabledInBroker: !Ref NodeExporter
      LoggingInfo:
        BrokerLogs:
          CloudWatchLogs:
            Enabled: 'true'
            LogGroup: !Ref MSKLogGroup
      Tags:
        EKSClusterName: !Select [ 0, !Ref EKSClusterName ]
      ClientAuthentication:
        !If 
        - EnableClientAuthConfig
        - 
          Sasl:
            Scram:
              Enabled: !Ref ClientAuthUsingSaslScram
        - !Ref 'AWS::NoValue'
  GetMskEndpointsFunctionRole:
    Type: "AWS::IAM::Role"
    Properties:
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - "lambda.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"
      Policies:
        -
          PolicyName: "cfn_utility_get_cidrs"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Effect: "Allow"
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                  - "kafka:Describe*"
                  - "kafka:List*"
                  - "kafka:Get*"
                Resource: "*"
  GetMskEndpointsFunctionLambda:
    Type: AWS::Lambda::Function
    Properties:
      Handler: mskendpoints
      Role:
        Fn::GetAtt:
        - GetMskEndpointsFunctionRole
        - Arn
      Code:
        S3Bucket: !Ref S3BucketName
        S3Key: functions/msk/mskendpoints.zip
      Runtime: go1.x
      Timeout: '60'
      Environment:
        Variables:
          clusterarn: !Ref MSKCluster
  GetMskEndpointsCustomResource:
    Type: AWS::CloudFormation::CustomResource
    Properties:
      ServiceToken: !GetAtt GetMskEndpointsFunctionLambda.Arn
    DependsOn: MSKCluster
Outputs:
  MSKClusterArn:
    Description: The Arn for MSK cluster
    Value: !Ref MSKCluster
  MSKClusterSecretArn:
    Description: The Arn of MSK cluster admin secret
    Value: !Ref AWSMSKSecret
    Condition: EnableClientAuthConfig
  MSKSecurityGroupID:
    Description: The ID of the security group created for the MSK clusters
    Value: !GetAtt
      - MSKSecurityGroup
      - GroupId
  Zkhost:
    Description: Zookeeper host string
    Value: !GetAtt  GetMskEndpointsCustomResource.ZookeeperConnectionString
  Zkport:
    Description: Zookeeper port for AWS MSK
    Value: !GetAtt  GetMskEndpointsCustomResource.ZkPort
  Host:
    Description: AWS MSK Bootstrap server Broker endpoints
    Value: !GetAtt  GetMskEndpointsCustomResource.BrokerConnectionString
  Port:
    Description: Dummy port for downstream consumption. Solely here to preserve host port semantics
    Value: !GetAtt  GetMskEndpointsCustomResource.BrokerPort